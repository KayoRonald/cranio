import {
  Button,
  FormControl,
  Flex,
  Heading,
  Input,
  Stack,
  useToast,
  Alert,
  Progress
} from '@chakra-ui/react';
import React from 'react';
import { AiOutlineSend } from 'react-icons/ai'
import Head from 'next/head'
import axios from '../api'
import { ModalAlert } from '../components/';
import { useRouter } from 'next/router';

export type Iuser = {
  id?: number;
  name: string;
  courseName: string;
  registration: string;
  canPlayToday?: any
}

export default function LoginChallenge(): JSX.Element {
  const router = useRouter()
  const [loading, setLoading] = React.useState<boolean>(false);
  const toast = useToast()
  const [key, Setkey] = React.useState(false)
  const [abrir, SetAbrir] = React.useState(false)
  const [name, SetName] = React.useState('')
  const [courseName, SetcourseName] = React.useState('')
  const [registration, Setregistration] = React.useState('')
  const [canPlayToday, setcanPlayToday] = React.useState(true)
  // Criar um hook usando isso
  const timeInMinutes = 1
  const [time, setTime] = React.useState(timeInMinutes * 60);
  const [isActive, setIsActive] = React.useState(true);
  const [hasFinished, setHasFinished] = React.useState(false);
  let percentTime = Math.floor(100 + ((time / (timeInMinutes * 60) * (-100))))

  const handleInputKeyPress = (e: React.KeyboardEvent<HTMLInputElement>) => {
    if (e.key) {
      if (e.key === '*') {
        Setkey(true)
        SetAbrir(false)
      }
      if (e.key === '#') {
        Setkey(false)
        SetAbrir(false)
      }
    }
  };
  async function onSubmitHandler(event: React.FormEvent): Promise<void> {
    event.preventDefault();
    try {
			setLoading(true)
			const { data } = await axios.get<Iuser>(`/student/find/${registration}`)
      SetName(data.name)
      SetcourseName(data.courseName)
      setcanPlayToday(data.canPlayToday)
      // if (!data.canPlayToday) {
        console.log(data.canPlayToday)
        SetAbrir(true)
      // }
    } catch (error: any) {
      toast({
        title: 'Não foi possível entrar no sistema!.',
        description: 'matrícula inexistente',
        status: 'error',
        duration: 5000,
        isClosable: true,
      })
      SetAbrir(!true)
    } finally {
      setLoading(false)
    }
  };
  React.useEffect(()=>{
    if(!canPlayToday){
      router.push(`/`)

    }
  }, [canPlayToday])

  React.useEffect(() => {
    if (isActive && time > 0) {
      setTimeout(() => {
        setTime(time - 1);
      }, 1000);
    } else if (isActive && time === 0) {
      router.push(`/`)
      setHasFinished(true)
      setIsActive(false)
    }
  }, [isActive, time]);
  React.useEffect(() => {
    if (key) {
      if (canPlayToday) {
        router.push(`challenge/${registration}`)
      }
      router.push(`/`)
    }
  }, [key])
  return (
    <Flex
      minH={'100vh'}
      align={'center'}
      justify={'center'}
      bg='gray.600'
      onKeyDown={handleInputKeyPress}
    >
      <Head>
        <title>Crânio | Login</title>
        <meta name="description" content="Generated by create next app" />
      </Head>
      {canPlayToday ? (
        <ModalAlert
          abrir={abrir}
          name={name}
          courseName={courseName}
          registration={registration}
        />
      ) : ''}
      <Stack
        as='form'
        spacing={4}
        w={'full'}
        maxW={'md'}
        bg='gray.800'
        rounded={'xl'}
        boxShadow={'lg'}
        p={6}
        onSubmit={onSubmitHandler}
        my={12}>
        <Heading lineHeight={1.1} color='white' fontSize={{ base: '2xl', md: '3xl' }}>
          Coloque sua matrícula
        </Heading>

        <FormControl>
          <Input
            placeholder="Usuário"
            type="number"
            autoFocus
            disabled={!isActive}
            onChange={(e) => Setregistration(e.target.value)}
            color='white'
          />
        </FormControl>
        <Stack spacing={6}>
          <Button
            leftIcon={<AiOutlineSend />}
            isLoading={loading}
            bg={'blue.400'}
            color={'white'}
            size='md'
            height='48px'
            width='100%'
            _hover={{
              bg: 'blue.500',
            }}>
            Enter
          </Button>
        </Stack>
        <Progress value={percentTime} hasStripe colorScheme='green' rounded='base' />
      </Stack>
    </Flex>
  );
}
